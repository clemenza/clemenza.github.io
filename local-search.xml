<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>OpenStack从入门到放弃</title>
    <link href="/2023/09/30/why-i-spent-weeks-on-openstack-and-why-i-gave-it-up-at-last/"/>
    <url>/2023/09/30/why-i-spent-weeks-on-openstack-and-why-i-gave-it-up-at-last/</url>
    
    <content type="html"><![CDATA[<h2 id="引语"><a href="#引语" class="headerlink" title="引语"></a>引语</h2><p>本文介绍测试团队虚拟化方案设计和实现过程，为什么选择该方案，该方案的优势和劣势，以及后续的实施计划等</p><h2 id="实现目标"><a href="#实现目标" class="headerlink" title="实现目标"></a>实现目标</h2><p>选择虚拟化方案时，需要考虑以下因素<br>替代现有测试环境，满足将来的团队成长和测试需求<br>完全隔离，消除环境混用带来的环境破坏<br>不会引入违反信创要求的商业风险<br>能够兼容现有的和采购中的体系结构平台，以及需要支持的国产操作系统平台<br>部署和运维难度，成本可控，这里的成本主要指人力成本<br>生产的虚拟环境方便管理和扩展，性能和可用性足够稳定<br>下面会基于以上需求分析和陈述选型过程中的决策和最终方案</p><h2 id="方案调研"><a href="#方案调研" class="headerlink" title="方案调研"></a>方案调研</h2><p>选择自己做虚拟化方案已经天然解决了第1点和第2点目标，主要需要从后面4点考虑，即<code>商业风险</code>，<code>兼容性</code>，<code>管理</code>，<code>运维成本</code></p><h3 id="OpenStack"><a href="#OpenStack" class="headerlink" title="OpenStack"></a>OpenStack</h3><p>OpenStack是非常成熟和庞大的公有云开源方案，也是第一个调研对象，毫无疑问OpenStack从功能上可以支持所有测试管理需求，甚至多出了很多团队不需要的大型特性，是否多就一定是好呢，答案是未必<br>参考官方文档和博客，借用<code>packstack</code>和<code>puppet</code>等自动化工具，我花了一周时间才部署出一个<code>allinone</code>的<code>OpenStack</code>环境，以及2个独立的计算节点，调通了一个虚机的生产过程，这个过程中我遇到了类似以下问题</p><ol><li><code>controller node</code>的部署过程中我需要持续不断的输入密码</li><li>由于部署<code>controller node</code>的虚机<code>hostname</code>带有数字，<code>rabbitmq</code>无法启动</li><li>由于Linux安全策略，web页面因为不能监听特定端口而无法启动</li><li>前一次安装失败之后，由于存在失败安装的残留数据本次部署会因为密码错误而无法启动</li><li>nova-compute因为访问<code>controller</code>的<code>rabbitmq</code>出错而无法启动</li><li>计算节点的操作系统只支持<code>OpenStack Rocky</code>，版本滞后<code>OpenStack Train</code>过大而不得不升级操作系统</li><li>升级后的操作系统因为未适配<code>OVN controller</code>而无法安装<code>neutron</code>网络<code>agent</code></li><li>…</li></ol><p>我不得不查询systemctl status, journal -xe和系统日志去寻找每个出问题涉及模块的蛛丝马迹，以及在不同机器的不同模块日志之间来回跳跃跟踪失败请求，分析和尝试，去完成整个定位和调试过程<br>直到我们开始复盘整个搭建过程和我们的虚拟化需求，为了利用OpenStack提供的强大虚拟化特性的那5%~10%，从而引入如此巨大的运维成本是否值得<br>诚然，OpenStack实现了如此复杂的逻辑解耦，不存在任何单点模块，每个模块都是可以弹性伸缩扩容的，理论上可以管理成千上万的资源节点；但是，模块变多同时也意味着出问题的点变多，模块之间的通信又会引入可能的网络问题，我已经在想象将来的某天一台虚机突然莫名其妙的不能访问外网要如何去定位和解决<br>作为一个规模不大的测试团队，需要的虚机为100+的规模，这个虚拟化方案的运维负担有些过重了<br>最后，我并不确定OpenStack是否符合信创要求，于是我们将视线转向了其他方案</p><h3 id="PVE"><a href="#PVE" class="headerlink" title="PVE"></a>PVE</h3><p>下一个备选方案就是PVE,oVirt,类ESXi的小型虚拟化方案，这类hypervisor以更加紧凑的方式实现了我们需要的所有功能，否定掉这类方案的原因也很简单粗暴，这类方案都需要在计算节点上运行一个较为强大的特殊操作系统或者engine，而我们的测试重点机器鲲鹏架构和openeluer不支持安装这样的管理端</p><h3 id="基于上述调研的混合方案"><a href="#基于上述调研的混合方案" class="headerlink" title="基于上述调研的混合方案"></a>基于上述调研的混合方案</h3><p>从以上调研过程来看，我们已经因为运维成本问题放弃了OpenStack，因为兼容性问题放弃了PVE，最终形成了适用我们团队的可行方案</p><h3 id="Webvirtmgr-Kvm-Lvm"><a href="#Webvirtmgr-Kvm-Lvm" class="headerlink" title="Webvirtmgr+Kvm+Lvm"></a>Webvirtmgr+Kvm+Lvm</h3><p>LVM存储池的灵感来自于OpenStack和PVE，差别在于cinder会自动将本地lvm的volume通过iscsi协议映射到网络，从而提供VM跨机挂载，要提供这种程度的池化还需要有调度模块计算整体存储节点的capacity和装箱算法<br>而我们的物理机上都有多个硬盘（包括机械硬盘和SSD），对于虚机的池化需求来说是绰绰有余的，而LVM在本地提供了极为灵活的管理扩容和快照能力，作为Linux utility稳定性也足够<br>既然OpenStack和PVE都选择了LVM作为默认存储方案，那么它的性能应该也是能够满足需求的，至少会明显好于file-backed的qemu镜像<br>webvirtmgr作为管理服务，功能上比PVE，oVirt之类的会弱很多，但是由于直接操作libvirtd，可以完全兼容不同的CPU和操作系统，只要kvm和qemu能安装就能管理，至少提供了集中式访问的方式<br>而运维操作可以通过Jenkins agent实现自动化需求，只要能够通过virsh命令行操作就可以创建为Jenkins pipeline可视化，底层还是依赖libvirtd，这也留下了较大的扩展空间<br>通过Linux bridge连接到物理网络给虚机分配量子机房IP，提供量子机房的物理网络直通<br>以上，兼容性，管理，运维成本，商业风险 都得到了满足<br><img src="/2023/09/30/why-i-spent-weeks-on-openstack-and-why-i-gave-it-up-at-last/virtualization.drawio.png"></p><h2 id="方案优势"><a href="#方案优势" class="headerlink" title="方案优势"></a>方案优势</h2><ol><li>兼容性好，即使以后加入新的平台也可以顺利纳入管理</li><li>稳定性好，本质上只依赖kvm+qemu，以及lvm的稳定性</li><li>运维成本尚可，需要有更多的运维脚本和Jenkins pipeline开发工作，可更好的定制化运维操作</li></ol><h3 id="方案劣势"><a href="#方案劣势" class="headerlink" title="方案劣势"></a>方案劣势</h3><ol><li>当前管理功能较弱，需持续完善</li><li>部署依赖IT准备物理机的基础配置</li></ol><h3 id="将来计划"><a href="#将来计划" class="headerlink" title="将来计划"></a>将来计划</h3><ol><li>VM creating pipeline</li><li>VM ops pipeline</li><li>admin wiki, principle, solution,arch, etc.</li><li>IO performance optimize</li><li>snapshot , backup, restore investigation</li><li>more customized images</li><li>kvm performance template</li></ol><p><a href="https://medium.com/@zxlmgsps2/why-i-spent-weeks-on-openstack-and-why-i-gave-it-up-at-last-106349429df5">参考</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/09/30/hello-world/"/>
    <url>/2023/09/30/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
